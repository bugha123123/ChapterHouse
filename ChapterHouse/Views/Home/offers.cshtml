@using ChapterHouse.Interface
@inject IBookService _bookservice

<script>
    tailwind.config = {
        darkMode: 'class',
        theme: {
            extend: {
                colors: {
                    halloween: {
                        orange: '#ff6600',
                        purple: '#6600ff',
                    }
                }
            }
        }
    }
</script>

<main class="flex-grow container mx-auto px-4 py-8">
    <h2 class="text-4xl font-bold mb-8 text-center text-spooky-200">Special Offers</h2>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8">
        <!-- Loop for Fiction Books (Limit to 6) -->
        @foreach (var book in (await _bookservice.GetBooksByCategory("Fiction")).Take(3))
        {
            <div class="bg-spooky-800 rounded-lg shadow-xl p-6 transform transition duration-500 hover:scale-105">
                <h3 class="text-2xl font-bold mb-4 text-spooky-200">@book.Title</h3>
                <a asp-action="Details" asp-controller="Home" asp-route-BookId="@book.Id">
                    <img src="@book.ImageURL" alt="@book.Title Book Cover" class="w-full h-64 object-cover mb-4 rounded">
                </a>
                <p class="mb-4">@GetTruncatedDescription(book.Description, 25)</p>
                <p class="text-xl font-bold mb-2 text-spooky-300">Now: 12.99$</p>
                <p class="text-sm line-through mb-4">Was: 20.00$</p>
                <form asp-action="AddBookToCart" asp-controller="Home" method="post">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-primary"><a asp-action="signup" asp-controller="Auth" class="text-decoration-none spooky-font text-white">Add to Cart</a></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary spooky-font text-white">Add to Cart</button>
                            }
                        </div>
                        <div>
                            <p class="card-text text-muted">Pages: @book.PageCount</p>
                        </div>
                    </div>
                </form>
            </div>
        }

        <!-- Loop for Spooky Books (Limit to 6) -->
        @foreach (var book in (await _bookservice.GetBooksByCategory("Spooky")).Take(3))
        {
            <div class="bg-spooky-800 rounded-lg shadow-xl p-6 transform transition duration-500 hover:scale-105">
                <h3 class="text-2xl font-bold mb-4 text-spooky-200">@book.Title</h3>
                <a asp-action="Details" asp-controller="Home" asp-route-BookId="@book.Id">
                    <img src="@book.ImageURL" alt="@book.Title Book Cover" class="w-full h-64 object-cover mb-4 rounded">
                </a>
                <p class="mb-4">@GetTruncatedDescription(book.Description, 25)</p>
                <p class="text-xl font-bold mb-2 text-spooky-300">Now: 12.99$</p>
                <p class="text-sm line-through mb-4">Was: 20.00$</p>
                <form asp-action="AddBookToCart" asp-controller="Home" method="post">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-primary"><a asp-action="signup" asp-controller="Auth" class="text-decoration-none spooky-font text-white">Add to Cart</a></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary spooky-font text-white">Add to Cart</button>
                            }
                        </div>
                        <div>
                            <p class="card-text text-muted">Pages: @book.PageCount</p>
                        </div>
                    </div>
                </form>
            </div>
        }

        <!-- Loop for Witch Genre Books (Limit to 6) -->
        @foreach (var book in (await _bookservice.GetBooksByCategory("Witch")).Take(3))
        {
            <div class="bg-spooky-800 rounded-lg shadow-xl p-6 transform transition duration-500 hover:scale-105">
                <h3 class="text-2xl font-bold mb-4 text-spooky-200">@book.Title</h3>
                <a asp-action="Details" asp-controller="Home" asp-route-BookId="@book.Id">
                    <img src="@book.ImageURL" alt="@book.Title Book Cover" class="w-full h-64 object-cover mb-4 rounded">
                </a>
                <p class="mb-4">@GetTruncatedDescription(book.Description, 25)</p>
                <p class="text-xl font-bold mb-2 text-spooky-300">Now: 12.99$</p>
                <p class="text-sm line-through mb-4">Was: 20.00$</p>
                <form asp-action="AddBookToCart" asp-controller="Home" method="post">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-primary"><a asp-action="signup" asp-controller="Auth" class="text-decoration-none spooky-font text-white">Add to Cart</a></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary spooky-font text-white">Add to Cart</button>
                            }
                        </div>
                        <div>
                            <p class="card-text text-muted">Pages: @book.PageCount</p>
                        </div>
                    </div>
                </form>
            </div>
        }

        @foreach (var book in (await _bookservice.GetBooksByCategory("Slasher")).Take(3))
        {
            <div class="bg-spooky-800 rounded-lg shadow-xl p-6 transform transition duration-500 hover:scale-105">
                <h3 class="text-2xl font-bold mb-4 text-spooky-200">@book.Title</h3>
                <a asp-action="Details" asp-controller="Home" asp-route-BookId="@book.Id">
                    <img src="@book.ImageURL" alt="@book.Title Book Cover" class="w-full h-64 object-cover mb-4 rounded">
                </a>
                <p class="mb-4">@GetTruncatedDescription(book.Description, 25)</p>
                <p class="text-xl font-bold mb-2 text-spooky-300">Now: 12.99$</p>
                <p class="text-sm line-through mb-4">Was: 20.00$</p>
                <form asp-action="AddBookToCart" asp-controller="Home" method="post">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-primary"><a asp-action="signup" asp-controller="Auth" class="text-decoration-none spooky-font text-white">Add to Cart</a></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary spooky-font text-white">Add to Cart</button>
                            }
                        </div>
                        <div>
                            <p class="card-text text-muted">Pages: @book.PageCount</p>
                        </div>
                    </div>
                </form>
            </div>
        }

        @foreach (var book in (await _bookservice.GetBooksByCategory("Paranormal fiction")).Take(3))
        {
            <div class="bg-spooky-800 rounded-lg shadow-xl p-6 transform transition duration-500 hover:scale-105">
                <h3 class="text-2xl font-bold mb-4 text-spooky-200">@book.Title</h3>
                <a asp-action="Details" asp-controller="Home" asp-route-BookId="@book.Id">
                    <img src="@book.ImageURL" alt="@book.Title Book Cover" class="w-full h-64 object-cover mb-4 rounded">
                </a>
                <p class="mb-4">@GetTruncatedDescription(book.Description, 25)</p>
                <p class="text-xl font-bold mb-2 text-spooky-300">Now: 12.99$</p>
                <p class="text-sm line-through mb-4">Was: 20.00$</p>
                <form asp-action="AddBookToCart" asp-controller="Home" method="post">
                    <input type="hidden" name="bookId" value="@book.Id" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-primary"><a asp-action="signup" asp-controller="Auth" class="text-decoration-none spooky-font text-white">Add to Cart</a></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary spooky-font text-white">Add to Cart</button>
                            }
                        </div>
                        <div>
                            <p class="card-text text-muted">Pages: @book.PageCount</p>
                        </div>
                    </div>
                </form>
            </div>
        }

    </div>
</main>

@functions {
    public string GetTruncatedDescription(string description, int wordLimit)
    {
        if (string.IsNullOrEmpty(description)) return description;

        var words = description.Split(' ');
        if (words.Length <= wordLimit) return description;

        return string.Join(" ", words.Take(wordLimit)) + "...";
    }
}
